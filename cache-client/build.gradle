description = 'Cache Client'

dependencies {
    api project(':cache')
    api project(':protocol')

    implementation group: 'com.google.guava', name: 'guava', version: guava
    implementation group: 'io.netty', name: 'netty-all', version: netty
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j

    testImplementation group: 'junit', name: 'junit', version: junit
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: slf4j
    testImplementation project(path: ':cache', configuration: 'testArchives')
}

task update {
    dependsOn ":cache-client:build"

    doLast {
        def path = sourceSets.main.runtimeClasspath
        def loader = new URLClassLoader(path.collect { f -> f.toURI().toURL() } as URL[])
        def cacheClient = loader.loadClass('net.runelite.cache.client.CacheClient')

        cacheClient.getCache(rsversion);

        loader.close()
    }
}
